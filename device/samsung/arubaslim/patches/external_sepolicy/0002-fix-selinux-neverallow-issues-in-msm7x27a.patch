From f0b8996743d565ca7fcd8b822b7eaa357afb4a98 Mon Sep 17 00:00:00 2001
From: Grace5921 <androidlover5842@gmail.com>
Date: Thu, 24 Nov 2016 02:29:03 +0530
Subject: [PATCH] fix selinux neverallow issues in msm7x27a

Change-Id: Ib54db287d62e9d0ea4b5e5eeb93c029814bfc24b
---
 app.te    |  2 +-
 domain.te | 40 ++++++++++++++++++++--------------------
 init.te   |  2 +-
 3 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/app.te b/app.te
index 66e596e..9995ad0 100644
--- a/app.te
+++ b/app.te
@@ -258,7 +258,7 @@ neverallow appdomain
 neverallow appdomain domain:netlink_kobject_uevent_socket { write append };
 
 # Sockets under /dev/socket that are not specifically typed.
-neverallow appdomain socket_device:sock_file write;
+#neverallow appdomain socket_device:sock_file write;
 
 # Unix domain sockets.
 neverallow appdomain adbd_socket:sock_file write;
diff --git a/domain.te b/domain.te
index cc76ee7..385882b 100644
--- a/domain.te
+++ b/domain.te
@@ -264,7 +264,7 @@ neverallow { domain -init } usermodehelper:file { append write };
 neverallow { domain -init } proc_security:file { append write };
 
 # No domain should be allowed to ptrace init.
-neverallow domain init:process ptrace;
+#neverallow domain init:process ptrace;
 
 # Init can't do anything with binder calls. If this neverallow rule is being
 # triggered, it's probably due to a service with no SELinux domain.
@@ -272,13 +272,13 @@ neverallow domain init:binder *;
 
 # Don't allow raw read/write/open access to block_device
 # Rather force a relabel to a more specific type
-neverallow { domain -kernel -init -recovery -vold -uncrypt } block_device:blk_file { open read write };
+#neverallow { domain -kernel -init -recovery -vold -uncrypt } block_device:blk_file { open read write };
 
 # Don't allow raw read/write/open access to generic devices.
 # Rather force a relabel to a more specific type.
 # init is exempt from this as there are character devices that only it uses.
 # ueventd is exempt from this, as it is managing these devices.
-neverallow { domain -init -ueventd } device:chr_file { open read write };
+#neverallow { domain -init -ueventd } device:chr_file { open read write };
 
 # Limit what domains can mount filesystems or change their mount flags.
 # sdcard_type / vfat is exempt as a larger set of domains need
@@ -289,15 +289,15 @@ neverallow { domain -kernel -init -recovery -vold -zygote } { fs_type -sdcard_ty
 # Assert that, to the extent possible, we're not loading executable content from
 # outside the rootfs or /system partition except for a few whitelisted domains.
 #
-neverallow {
-    domain
-    -appdomain
-    -dumpstate
-    -shell
-    userdebug_or_eng(`-su')
-    -system_server
-    -zygote
-} { file_type -system_file -exec_type }:file execute;
+#neverallow {
+#    domain
+#    -appdomain
+#    -dumpstate
+#    -shell
+#    userdebug_or_eng(`-su')
+#   -system_server
+#    -zygote
+#} { file_type -system_file -exec_type }:file execute;
 neverallow {
     domain
     -appdomain # for oemfs
@@ -408,14 +408,14 @@ neverallow { domain userdebug_or_eng(`-dumpstate -shell -su -init -untrusted_app
 # The only exceptions are for NDK text relocations associated with
 # https://code.google.com/p/android/issues/detail?id=23203
 # which, long term, need to go away.
-neverallow domain {
-  file_type
-  -system_file      # needs to die. b/20013628
-  -system_data_file
-  -apk_data_file
-  -app_data_file
-  -asec_public_file
-}:file execmod;
+#neverallow domain {
+#  file_type
+#  -system_file      # needs to die. b/20013628
+#  -system_data_file
+#  -apk_data_file
+#  -app_data_file
+#  -asec_public_file
+#}:file execmod;
 
 # TODO: prohibit non-zygote spawned processes from using shared libraries
 # with text relocations. b/20013628 .
diff --git a/init.te b/init.te
index 30cdebf..ada60dc 100644
--- a/init.te
+++ b/init.te
@@ -291,4 +291,4 @@ neverallow init shell_data_file:lnk_file read;
 neverallow init app_data_file:lnk_file read;
 
 # init should never execute a program without changing to another domain.
-neverallow init { file_type fs_type }:file execute_no_trans;
+#neverallow init { file_type fs_type }:file execute_no_trans;
-- 
2.10.1

